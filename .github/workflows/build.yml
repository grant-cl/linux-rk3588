name: Build Mainline
run-name: Build with mainline Linux 6.6.0-rc4

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        platform:
          # - orangepi-5
          # - orangepi-5b
          - orangepi-5-plus
          # - rock-5b
          # - rock-5a
          # - radxa-cm5-io
          # - nanopc-t6
          # - nanopi-r6c
          # - nanopi-r6s
          # - indiedroid-nova
          # - mixtile-blade3
          # - turing-rk1

    steps:
      # - name: Get more disk space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 2048
      #     swap-size-mb: 1024
      #     remove-dotnet: 'true'
      #     remove-android: 'true'
      #     remove-haskell: 'true'
      #     remove-codeql: 'true'
      #     remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
          qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 \
          python-is-python3 fdisk bc debhelper
          sudo apt install gcc make libncurses-dev bison flex libssl-dev fakeroot bc autoconf automake libtool build-essential debhelper zlib1g-dev uuid-dev libblkid-dev -y

      - name: Build kernel
        shell: bash
        run: sudo ./build.sh

      # - name: Build u-boot
      #   shell: bash
      #   run: sudo ./build.sh -b ${{ matrix.platform }} --mainline --uboot-only

      # - name: Build image
      #   shell: bash
      #   run: sudo ./build.sh --board ${{ matrix.platform }} --mainline --server-only

      # - name: Upload server image
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ubuntu-22.04.3-preinstalled-server-arm64-${{ matrix.platform }}-mainline-6.6.0-rc4
      #     path: ./images/ubuntu-22.04.3-preinstalled-server-arm64-${{ matrix.platform }}-mainline-6.6.0-rc4.*
      #     if-no-files-found: error
    
      # - name: Clean cache
      #   shell: bash
      #   run: sync && sudo rm -rf ./images/ ./build/ && sync
